<?php
/**
 * =====================================
 * DA –ú–ê–†–ö–ï–†–´ - –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ê–Ø –í–ï–†–°–ò–Ø
 * =====================================
 */

// –î–æ–±–∞–≤–ª—è–µ–º CSS —Å—Ç–∏–ª–∏ –¥–ª—è –º–∏–≥–∞–Ω–∏—è
add_action('wp_head', function() {
    ?>
    <style type="text/css">
    /* DA –º–∞—Ä–∫–µ—Ä—ã - –º–∏–≥–∞–Ω–∏–µ */
    @keyframes da-blink {
        0% { 
            opacity: 1; 
            transform: scale(1);
            filter: drop-shadow(0 0 8px #ff0000);
        }
        50% { 
            opacity: 0.4; 
            transform: scale(1.4);
            filter: drop-shadow(0 0 25px #ff0000);
        }
        100% { 
            opacity: 1; 
            transform: scale(1);
            filter: drop-shadow(0 0 8px #ff0000);
        }
    }

    /* –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∫ –º–∞—Ä–∫–µ—Ä–∞–º —Å –∫–ª–∞—Å—Å–æ–º da-marker-blink */
    .mh-map-pin.da-marker-blink {
        animation: da-blink 2.5s infinite ease-in-out !important;
        z-index: 9999 !important;
        position: relative !important;
        background-color: rgba(255, 0, 0, 0.15) !important;
        border: 3px solid #ff0000 !important;
        border-radius: 50% !important;
        box-shadow: 0 0 15px rgba(255, 0, 0, 0.6) !important;
    }

    /* –î–µ–ª–∞–µ–º –∏–∫–æ–Ω–∫—É –≤–Ω—É—Ç—Ä–∏ –º–∞—Ä–∫–µ—Ä–∞ –∫—Ä–∞—Å–Ω–æ–π */
    .mh-map-pin.da-marker-blink i.flaticon-pin {
        color: #ff0000 !important;
        text-shadow: 0 0 5px rgba(255, 0, 0, 0.8) !important;
    }

    /* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è */
    .mh-map-pin.da-marker-blink::before {
        content: '';
        position: absolute;
        top: -5px;
        left: -5px;
        right: -5px;
        bottom: -5px;
        border: 2px solid rgba(255, 0, 0, 0.5);
        border-radius: 50%;
        animation: da-pulse 3s infinite ease-in-out;
    }

    @keyframes da-pulse {
        0%, 100% { 
            transform: scale(1);
            opacity: 0.7;
        }
        50% { 
            transform: scale(1.2);
            opacity: 0.3;
        }
    }

    /* –¢–ï–°–¢–û–í–´–ô —Å—Ç–∏–ª—å - –ø—Ä–∏–º–µ–Ω—è–µ–º –∫–æ –≤—Å–µ–º –º–∞—Ä–∫–µ—Ä–∞–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ */
    .mh-map-pin.test-style {
        border: 5px solid blue !important;
        background-color: rgba(0, 0, 255, 0.2) !important;
    }
    </style>
    <?php
});

// AJAX –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è DA –º–∞—Ä–∫–µ—Ä–æ–≤
add_action('wp_ajax_get_da_markers', 'ajax_get_da_markers');
add_action('wp_ajax_nopriv_get_da_markers', 'ajax_get_da_markers');

function ajax_get_da_markers() {
    // –ü–æ–ª—É—á–∞–µ–º DA –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    $da_properties = get_posts(array(
        'post_type' => 'estate',
        'post_status' => 'publish',
        'posts_per_page' => -1,
        'tax_query' => array(
            array(
                'taxonomy' => 'spetspredlozheniya',
                'field' => 'slug',
                'terms' => 'da'
            )
        )
    ));

    $markers = array();
    foreach ($da_properties as $property) {
        $latitude = get_post_meta($property->ID, 'myhome_lat', true);
        $longitude = get_post_meta($property->ID, 'myhome_lng', true);
        $address = get_post_meta($property->ID, 'myhome_property_address', true);
        
        $markers[] = array(
            'id' => $property->ID,
            'title' => $property->post_title,
            'slug' => $property->post_name,
            'latitude' => floatval($latitude),
            'longitude' => floatval($longitude),
            'address' => $address
        );
    }

    wp_send_json_success(array(
        'markers' => $markers,
        'count' => count($markers)
    ));
}

// –î–æ–±–∞–≤–ª—è–µ–º JavaScript –¥–ª—è –º–∏–≥–∞–Ω–∏—è –º–∞—Ä–∫–µ—Ä–æ–≤
add_action('wp_footer', function() {
    ?>
    <script type="text/javascript">
    (function($) {
        $(document).ready(function() {
            console.log('üéØ DA –ú–∞—Ä–∫–µ—Ä—ã - –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            
            var daPropertyIds = [];
            var daPropertyCoords = [];
            var processedMarkers = new Set();
            var debugMode = true;
            
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ DA –æ–±—ä—è–≤–ª–µ–Ω–∏–π
            $.ajax({
                url: '<?php echo admin_url('admin-ajax.php'); ?>',
                type: 'POST',
                data: {
                    action: 'get_da_markers'
                },
                success: function(response) {
                    if (response.success && response.data.markers.length > 0) {
                        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ DA –æ–±—ä—è–≤–ª–µ–Ω–∏–π: ' + response.data.count);
                        
                        var daProperties = response.data.markers;
                        daPropertyIds = daProperties.map(function(marker) {
                            return parseInt(marker.id);
                        });
                        
                        // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
                        daPropertyCoords = daProperties.map(function(marker) {
                            return {
                                id: parseInt(marker.id),
                                lat: parseFloat(marker.latitude),
                                lng: parseFloat(marker.longitude),
                                title: marker.title
                            };
                        });
                        
                        console.log('DA Property IDs:', daPropertyIds);
                        console.log('DA Property Coords:', daPropertyCoords);
                        
                        // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é —Å–∏—Å—Ç–µ–º—É
                        initDiagnosticSystem();
                        
                    } else {
                        console.log('‚ö†Ô∏è DA –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è DA –º–∞—Ä–∫–µ—Ä–æ–≤:', error);
                }
            });
            
            function initDiagnosticSystem() {
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–∞—Ä–∫–µ—Ä DA –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º
                function isDAMarker(propertyId) {
                    if (!propertyId) return false;
                    return daPropertyIds.indexOf(parseInt(propertyId)) !== -1;
                }
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ç–∏–ª—è (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏)
                function applyTestStyle(markerElement) {
                    $(markerElement).addClass('test-style');
                    console.log('üîµ –ü—Ä–∏–º–µ–Ω–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ç–∏–ª—å –∫ –º–∞—Ä–∫–µ—Ä—É');
                }
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è DA —Å—Ç–∏–ª–µ–π –∫ –º–∞—Ä–∫–µ—Ä—É
                function applyDAStyle(markerElement, propertyId, source) {
                    if (!markerElement || !propertyId) {
                        console.log('‚ùå –ù–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–ª–∏ ID:', markerElement, propertyId);
                        return false;
                    }
                    
                    var markerId = 'marker_' + propertyId + '_' + source;
                    if (processedMarkers.has(markerId)) {
                        console.log('‚ö†Ô∏è –ú–∞—Ä–∫–µ—Ä —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω:', markerId);
                        return false;
                    }
                    
                    if (isDAMarker(propertyId)) {
                        $(markerElement).addClass('da-marker-blink');
                        processedMarkers.add(markerId);
                        console.log('‚ú® –£–°–ü–ï–•! –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–∏–ª—å –º–∏–≥–∞–Ω–∏—è –∫ –º–∞—Ä–∫–µ—Ä—É ID:', propertyId, '–∏—Å—Ç–æ—á–Ω–∏–∫:', source);
                        return true;
                    } else {
                        console.log('‚ö†Ô∏è –ú–∞—Ä–∫–µ—Ä –Ω–µ —è–≤–ª—è–µ—Ç—Å—è DA –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º:', propertyId);
                        return false;
                    }
                }
                
                // –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ DOM –º–∞—Ä–∫–µ—Ä–æ–≤
                function deepInspectDOMMarkers() {
                    var allMarkers = $('.mh-map-pin');
                    console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –º–∞—Ä–∫–µ—Ä–æ–≤ –≤ DOM:', allMarkers.length);
                    
                    allMarkers.each(function(index) {
                        var $marker = $(this);
                        var element = this;
                        
                        console.log('üîç –ú–∞—Ä–∫–µ—Ä #' + index + ':');
                        console.log('  - –≠–ª–µ–º–µ–Ω—Ç:', element);
                        console.log('  - jQuery –æ–±—ä–µ–∫—Ç:', $marker);
                        console.log('  - –ö–ª–∞—Å—Å—ã:', element.className);
                        console.log('  - ID —ç–ª–µ–º–µ–Ω—Ç–∞:', element.id);
                        console.log('  - data-* –∞—Ç—Ä–∏–±—É—Ç—ã:', $marker.data());
                        
                        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã
                        var attrs = {};
                        for (var i = 0; i < element.attributes.length; i++) {
                            var attr = element.attributes[i];
                            attrs[attr.name] = attr.value;
                        }
                        console.log('  - –í—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã:', attrs);
                        
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                        var $parent = $marker.parent();
                        console.log('  - –†–æ–¥–∏—Ç–µ–ª—å:', $parent[0]);
                        console.log('  - –î–∞–Ω–Ω—ã–µ —Ä–æ–¥–∏—Ç–µ–ª—è:', $parent.data());
                        
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å–µ–¥–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                        var $siblings = $marker.siblings();
                        console.log('  - –°–æ—Å–µ–¥–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã:', $siblings.length);
                        
                        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ç–∏–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CSS
                        if (index === 0) {
                            applyTestStyle(element);
                        }
                        
                        console.log('  -------------------');
                    });
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
                    console.log('üåç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:');
                    console.log('  - window.myHomeMap:', window.myHomeMap);
                    console.log('  - window.MyHomeMap:', window.MyHomeMap);
                    console.log('  - window.myhomeMap:', window.myhomeMap);
                    console.log('  - window.MyHome:', window.MyHome);
                    console.log('  - window.MyHomeMapData:', window.MyHomeMapData);
                    
                    // –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ MyHomeMapData
                    if (window.MyHomeMapData) {
                        console.log('  - MyHomeMapData.estates:', window.MyHomeMapData.estates);
                        if (window.MyHomeMapData.estates && window.MyHomeMapData.estates.length > 0) {
                            console.log('  - –ü–µ—Ä–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ:', window.MyHomeMapData.estates[0]);
                        }
                    }
                }
                
                // –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–≥–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–æ –∏–Ω–¥–µ–∫—Å—É
                function tryDirectMapping() {
                    var allMarkers = $('.mh-map-pin');
                    console.log('üéØ –ü–†–Ø–ú–û–ï –°–û–ü–û–°–¢–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–±—É–µ–º —Å–≤—è–∑–∞—Ç—å –º–∞—Ä–∫–µ—Ä—ã —Å MyHomeMapData');
                    
                    if (window.MyHomeMapData && window.MyHomeMapData.estates) {
                        var estates = window.MyHomeMapData.estates;
                        console.log('  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –¥–∞–Ω–Ω—ã—Ö:', estates.length);
                        console.log('  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ä–∫–µ—Ä–æ–≤ –≤ DOM:', allMarkers.length);
                        
                        allMarkers.each(function(index) {
                            var $marker = $(this);
                            var estate = estates[index];
                            
                            if (estate) {
                                console.log('  - –ú–∞—Ä–∫–µ—Ä #' + index + ' <-> –û–±—ä—è–≤–ª–µ–Ω–∏–µ:', estate);
                                
                                var propertyId = estate.id;
                                if (propertyId && applyDAStyle(this, propertyId, 'direct_mapping_' + index)) {
                                    console.log('üéâ –£–°–ü–ï–• –ø—Ä—è–º–æ–≥–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è!');
                                }
                            }
                        });
                    }
                }
                
                // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
                function tryCoordinateMapping() {
                    console.log('üåç –°–û–ü–û–°–¢–ê–í–õ–ï–ù–ò–ï –ü–û –ö–û–û–†–î–ò–ù–ê–¢–ê–ú');
                    
                    if (window.MyHomeMapData && window.MyHomeMapData.estates) {
                        var estates = window.MyHomeMapData.estates;
                        
                        estates.forEach(function(estate, index) {
                            if (estate.position && estate.position.lat && estate.position.lng) {
                                var lat = parseFloat(estate.position.lat);
                                var lng = parseFloat(estate.position.lng);
                                
                                console.log('  - –û–±—ä—è–≤–ª–µ–Ω–∏–µ #' + index + ':', estate.name, '–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:', lat, lng);
                                
                                // –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π DA –º–∞—Ä–∫–µ—Ä
                                var daMatch = daPropertyCoords.find(function(coord) {
                                    return Math.abs(coord.lat - lat) < 0.0001 && 
                                           Math.abs(coord.lng - lng) < 0.0001;
                                });
                                
                                if (daMatch) {
                                    console.log('  ‚úÖ –ù–ê–ô–î–ï–ù–û –°–û–í–ü–ê–î–ï–ù–ò–ï:', daMatch);
                                    
                                    // –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π DOM —ç–ª–µ–º–µ–Ω—Ç
                                    var $correspondingMarker = $('.mh-map-pin').eq(index);
                                    if ($correspondingMarker.length && applyDAStyle($correspondingMarker[0], daMatch.id, 'coordinate_mapping_' + index)) {
                                        console.log('üéâ –£–°–ü–ï–• —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º!');
                                    }
                                }
                            }
                        });
                    }
                }
                
                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                function forceApplyTestStyles() {
                    console.log('üö® –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
                    
                    var $firstTwo = $('.mh-map-pin').slice(0, 2);
                    $firstTwo.each(function(index) {
                        $(this).addClass('da-marker-blink');
                        console.log('üö® –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω —Å—Ç–∏–ª—å –∫ –º–∞—Ä–∫–µ—Ä—É #' + index);
                    });
                    
                    setTimeout(function() {
                        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã—Ö —Å—Ç–∏–ª–µ–π:');
                        $('.da-marker-blink').each(function(i) {
                            console.log('  - –ú–∞—Ä–∫–µ—Ä —Å da-marker-blink #' + i + ':', this);
                        });
                    }, 1000);
                }
                
                // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
                setTimeout(function() {
                    console.log('üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –î–ò–ê–ì–ù–û–°–¢–ò–ö–£...');
                    
                    deepInspectDOMMarkers();
                    
                    setTimeout(function() {
                        tryDirectMapping();
                        
                        setTimeout(function() {
                            tryCoordinateMapping();
                            
                            setTimeout(function() {
                                forceApplyTestStyles();
                            }, 2000);
                        }, 2000);
                    }, 2000);
                }, 3000);
                
                console.log('üöÄ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞');
            }
        });
    })(jQuery);
    </script>
    <?php
});