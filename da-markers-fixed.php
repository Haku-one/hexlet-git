<?php
/**
 * =====================================
 * DA –ú–ê–†–ö–ï–†–´ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
 * =====================================
 */

// –î–æ–±–∞–≤–ª—è–µ–º CSS —Å—Ç–∏–ª–∏ –¥–ª—è –º–∏–≥–∞–Ω–∏—è
add_action('wp_head', function() {
    ?>
    <style type="text/css">
    /* DA –º–∞—Ä–∫–µ—Ä—ã - –º–∏–≥–∞–Ω–∏–µ */
    @keyframes da-blink {
        0% { 
            opacity: 1; 
            transform: scale(1);
            filter: drop-shadow(0 0 5px red);
        }
        50% { 
            opacity: 0.3; 
            transform: scale(1.3);
            filter: drop-shadow(0 0 20px red);
        }
        100% { 
            opacity: 1; 
            transform: scale(1);
            filter: drop-shadow(0 0 5px red);
        }
    }

    /* –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∫ –º–∞—Ä–∫–µ—Ä–∞–º —Å –∫–ª–∞—Å—Å–æ–º da-marker-blink */
    .mh-map-pin.da-marker-blink {
        animation: da-blink 2s infinite ease-in-out !important;
        z-index: 9999 !important;
        position: relative !important;
    }

    /* –î–µ–ª–∞–µ–º –∏–∫–æ–Ω–∫—É –≤–Ω—É—Ç—Ä–∏ –º–∞—Ä–∫–µ—Ä–∞ –∫—Ä–∞—Å–Ω–æ–π */
    .mh-map-pin.da-marker-blink i.flaticon-pin {
        color: red !important;
    }

    /* –£—Å–∏–ª–∏–≤–∞–µ–º –∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –ª—É—á—à–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏ */
    .mh-map-pin.da-marker-blink {
        background-color: rgba(255, 0, 0, 0.1) !important;
        border: 2px solid red !important;
        border-radius: 50% !important;
    }
    </style>
    <?php
});

// AJAX –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è DA –º–∞—Ä–∫–µ—Ä–æ–≤
add_action('wp_ajax_get_da_markers', 'ajax_get_da_markers');
add_action('wp_ajax_nopriv_get_da_markers', 'ajax_get_da_markers');

function ajax_get_da_markers() {
    // –ü–æ–ª—É—á–∞–µ–º DA –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    $da_properties = get_posts(array(
        'post_type' => 'estate',
        'post_status' => 'publish',
        'posts_per_page' => -1,
        'tax_query' => array(
            array(
                'taxonomy' => 'spetspredlozheniya',
                'field' => 'slug',
                'terms' => 'da'
            )
        )
    ));

    $markers = array();
    foreach ($da_properties as $property) {
        $latitude = get_post_meta($property->ID, 'myhome_lat', true);
        $longitude = get_post_meta($property->ID, 'myhome_lng', true);
        $address = get_post_meta($property->ID, 'myhome_property_address', true);
        
        $markers[] = array(
            'id' => $property->ID,
            'title' => $property->post_title,
            'slug' => $property->post_name,
            'latitude' => $latitude,
            'longitude' => $longitude,
            'address' => $address
        );
    }

    wp_send_json_success(array(
        'markers' => $markers,
        'count' => count($markers)
    ));
}

// –î–æ–±–∞–≤–ª—è–µ–º JavaScript –¥–ª—è –º–∏–≥–∞–Ω–∏—è –º–∞—Ä–∫–µ—Ä–æ–≤
add_action('wp_footer', function() {
    ?>
    <script type="text/javascript">
    (function($) {
        $(document).ready(function() {
            console.log('üéØ DA –ú–∞—Ä–∫–µ—Ä—ã - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ DA –æ–±—ä—è–≤–ª–µ–Ω–∏–π
            $.ajax({
                url: '<?php echo admin_url('admin-ajax.php'); ?>',
                type: 'POST',
                data: {
                    action: 'get_da_markers'
                },
                success: function(response) {
                    if (response.success && response.data.markers.length > 0) {
                        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ DA –æ–±—ä—è–≤–ª–µ–Ω–∏–π: ' + response.data.count);
                        
                        var daProperties = response.data.markers;
                        var daPropertyIds = daProperties.map(function(marker) {
                            return parseInt(marker.id);
                        });
                        
                        console.log('DA Property IDs:', daPropertyIds);
                        
                        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–∞—Ä–∫–µ—Ä DA –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º
                        function isDAMarker(propertyId) {
                            if (!propertyId) return false;
                            return daPropertyIds.indexOf(parseInt(propertyId)) !== -1;
                        }
                        
                        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è DA —Å—Ç–∏–ª–µ–π –∫ –º–∞—Ä–∫–µ—Ä—É
                        function applyDAStyle(markerElement, propertyId) {
                            if (markerElement && isDAMarker(propertyId)) {
                                $(markerElement).addClass('da-marker-blink');
                                console.log('‚ú® –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–∏–ª—å –º–∏–≥–∞–Ω–∏—è –∫ –º–∞—Ä–∫–µ—Ä—É ID:', propertyId);
                                return true;
                            }
                            return false;
                        }
                        
                        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Å—Å–∏–≤–∞ –º–∞—Ä–∫–µ—Ä–æ–≤ RichMarker
                        function processRichMarkers(markers) {
                            if (!markers || !Array.isArray(markers)) return;
                            
                            markers.forEach(function(marker, index) {
                                if (marker && marker.content_) {
                                    // –ü–æ–ª—É—á–∞–µ–º ID –∏–∑ —Å–≤–æ–π—Å—Ç–≤ –º–∞—Ä–∫–µ—Ä–∞
                                    var propertyId = null;
                                    
                                    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è ID
                                    if (marker.estate && marker.estate.id) {
                                        propertyId = marker.estate.id;
                                    } else if (marker.estateIndex !== undefined && window.MyHomeMapData && window.MyHomeMapData.estates) {
                                        var estate = window.MyHomeMapData.estates[marker.estateIndex];
                                        if (estate && estate.id) {
                                            propertyId = estate.id;
                                        }
                                    } else if (marker.index !== undefined && window.MyHomeMapData && window.MyHomeMapData.estates) {
                                        var estate = window.MyHomeMapData.estates[marker.index];
                                        if (estate && estate.id) {
                                            propertyId = estate.id;
                                        }
                                    }
                                    
                                    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª—å –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω ID
                                    if (propertyId && applyDAStyle(marker.content_, propertyId)) {
                                        console.log('üìç –û–±—Ä–∞–±–æ—Ç–∞–Ω RichMarker #' + index + ' ID:', propertyId);
                                    }
                                }
                            });
                        }
                        
                        // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç—ã MyHome
                        function monitorMapVariables() {
                            var checkInterval = setInterval(function() {
                                var processed = false;
                                
                                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã Vue –∫–∞—Ä—Ç—ã
                                if (window.MyHomeMapData && window.MyHomeMapData.estates) {
                                    console.log('üó∫Ô∏è –ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã MyHome');
                                    
                                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Å—Ç–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ä–æ–≤
                                    var markerSources = [
                                        'window.myHomeMap && window.myHomeMap.markers',
                                        'window.MyHomeMap && window.MyHomeMap.markers',
                                        'window.myhomeMap && window.myhomeMap.markers'
                                    ];
                                    
                                    markerSources.forEach(function(source) {
                                        try {
                                            var markers = eval(source);
                                            if (markers && Array.isArray(markers) && markers.length > 0) {
                                                console.log('üìç –ù–∞–π–¥–µ–Ω—ã –º–∞—Ä–∫–µ—Ä—ã –≤:', source);
                                                processRichMarkers(markers);
                                                processed = true;
                                            }
                                        } catch (e) {
                                            // –ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω
                                        }
                                    });
                                }
                                
                                // –ò—â–µ–º –º–∞—Ä–∫–µ—Ä—ã —á–µ—Ä–µ–∑ DOM
                                var mapPins = $('.mh-map-pin:not(.da-processed)');
                                if (mapPins.length > 0) {
                                    console.log('üîç –ù–∞–π–¥–µ–Ω—ã –º–∞—Ä–∫–µ—Ä—ã –≤ DOM:', mapPins.length);
                                    
                                    mapPins.each(function(index) {
                                        var $pin = $(this);
                                        $pin.addClass('da-processed');
                                        
                                        // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–π RichMarker
                                        var propertyId = null;
                                        
                                        // –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                                        var $parent = $pin.closest('[data-id], [data-property-id]');
                                        if ($parent.length) {
                                            propertyId = $parent.data('id') || $parent.data('property-id');
                                        }
                                        
                                        // –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å –≤ DOM
                                        if (!propertyId && window.MyHomeMapData && window.MyHomeMapData.estates) {
                                            var domIndex = $('.mh-map-pin').index($pin);
                                            var estate = window.MyHomeMapData.estates[domIndex];
                                            if (estate && estate.id) {
                                                propertyId = estate.id;
                                            }
                                        }
                                        
                                        if (propertyId && applyDAStyle($pin[0], propertyId)) {
                                            console.log('üé® –ü—Ä–∏–º–µ–Ω–µ–Ω —Å—Ç–∏–ª—å –∫ DOM –º–∞—Ä–∫–µ—Ä—É #' + index + ' ID:', propertyId);
                                            processed = true;
                                        }
                                    });
                                }
                                
                                // –ï—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –º–∞—Ä–∫–µ—Ä—ã, –º–æ–∂–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞ –≤—Ä–µ–º—è
                                if (processed) {
                                    clearInterval(checkInterval);
                                    
                                    // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –Ω–æ–≤—ã—Ö –º–∞—Ä–∫–µ—Ä–æ–≤
                                    setTimeout(monitorMapVariables, 5000);
                                }
                            }, 1000);
                            
                            // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
                            setTimeout(function() {
                                clearInterval(checkInterval);
                            }, 30000);
                        }
                        
                        // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
                        monitorMapVariables();
                        
                        // –ò—Å–ø–æ–ª—å–∑—É–µ–º MutationObserver –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –º–∞—Ä–∫–µ—Ä–æ–≤
                        var observer = new MutationObserver(function(mutations) {
                            var hasNewMarkers = false;
                            
                            mutations.forEach(function(mutation) {
                                if (mutation.addedNodes.length) {
                                    for (var i = 0; i < mutation.addedNodes.length; i++) {
                                        var node = mutation.addedNodes[i];
                                        
                                        if (node.nodeType === 1) {
                                            var $node = $(node);
                                            var $newMarkers = $node.hasClass('mh-map-pin') ? 
                                                            $node : 
                                                            $node.find('.mh-map-pin:not(.da-processed)');
                                            
                                            if ($newMarkers.length > 0) {
                                                hasNewMarkers = true;
                                                
                                                $newMarkers.each(function() {
                                                    var $marker = $(this);
                                                    $marker.addClass('da-processed');
                                                    
                                                    // –ñ–¥–µ–º –∫–æ—Ä–æ—Ç–∫—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–∞—Ä–∫–µ—Ä–∞
                                                    setTimeout(function() {
                                                        // –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
                                                        monitorMapVariables();
                                                    }, 500);
                                                });
                                            }
                                        }
                                    }
                                }
                            });
                        });
                        
                        // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ DOM
                        observer.observe(document.body, {
                            childList: true,
                            subtree: true
                        });
                        
                        console.log('üöÄ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ DA –º–∞—Ä–∫–µ—Ä–æ–≤ –∑–∞–ø—É—â–µ–Ω–∞');
                        
                    } else {
                        console.log('‚ö†Ô∏è DA –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è DA –º–∞—Ä–∫–µ—Ä–æ–≤:', error);
                }
            });
        });
    })(jQuery);
    </script>
    <?php
});